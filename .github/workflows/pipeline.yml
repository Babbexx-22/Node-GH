name: pipeline-with-github-action

on:
  push:
    branches: 
      - master

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  IMAGE_TAG: v1
  ECR_REPOSITORY: github-node

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v3
    - name: setup node js app on github runner
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: install node js dependencies  
      run: npm ci

  build:
    needs: setup
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: build and tag image
      run: |
        docker build -t ${{ secrets.AWS_REGISTRY_URL }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
      # docker tag my-image:latest ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
    
    - name: upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: image-built
        path: ./

  push:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      output_name: ${{ steps.login-ecr.outputs.registry }}
    
    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: download artifact to current working dir
      uses: actions/download-artifact@v3
      with:
        name: image-built # This downloads the artifact to the current working directory
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: push docker image to Amazon ECR
      # env:
      #   REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #   REPOSITORY: my-ecr-repo
      #   IMAGE_TAG: latest
      run: |
# docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        docker push ${{ secrets.AWS_REGISTRY_URL }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}